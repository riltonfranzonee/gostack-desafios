var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _Card=_interopRequireDefault(require("./Card"));var _HeaderHeightContext=_interopRequireDefault(require("../../utils/HeaderHeightContext"));var _useTheme2=_interopRequireDefault(require("../../../utils/useTheme"));var _jsxFileName="/Users/satya/Workspace/Callstack/react-navigation-stack/src/vendor/views/Stack/CardContainer.tsx";var EPSILON=0.1;function CardContainer(_ref){var active=_ref.active,cardOverlayEnabled=_ref.cardOverlayEnabled,cardShadowEnabled=_ref.cardShadowEnabled,cardStyle=_ref.cardStyle,cardStyleInterpolator=_ref.cardStyleInterpolator,closing=_ref.closing,gesture=_ref.gesture,focused=_ref.focused,gestureDirection=_ref.gestureDirection,gestureEnabled=_ref.gestureEnabled,gestureResponseDistance=_ref.gestureResponseDistance,gestureVelocityImpact=_ref.gestureVelocityImpact,getPreviousRoute=_ref.getPreviousRoute,getFocusedRoute=_ref.getFocusedRoute,headerMode=_ref.headerMode,headerShown=_ref.headerShown,headerStyleInterpolator=_ref.headerStyleInterpolator,headerTransparent=_ref.headerTransparent,headerHeight=_ref.headerHeight,onHeaderHeightChange=_ref.onHeaderHeightChange,index=_ref.index,layout=_ref.layout,onCloseRoute=_ref.onCloseRoute,onOpenRoute=_ref.onOpenRoute,onPageChangeCancel=_ref.onPageChangeCancel,onPageChangeConfirm=_ref.onPageChangeConfirm,onPageChangeStart=_ref.onPageChangeStart,onTransitionEnd=_ref.onTransitionEnd,onTransitionStart=_ref.onTransitionStart,previousScene=_ref.previousScene,renderHeader=_ref.renderHeader,renderScene=_ref.renderScene,safeAreaInsetBottom=_ref.safeAreaInsetBottom,safeAreaInsetLeft=_ref.safeAreaInsetLeft,safeAreaInsetRight=_ref.safeAreaInsetRight,safeAreaInsetTop=_ref.safeAreaInsetTop,scene=_ref.scene,transitionSpec=_ref.transitionSpec;React.useEffect(function(){onPageChangeConfirm==null?void 0:onPageChangeConfirm();},[active,onPageChangeConfirm]);var handleOpen=function handleOpen(){onTransitionEnd==null?void 0:onTransitionEnd({route:scene.route},false);onOpenRoute({route:scene.route});};var handleClose=function handleClose(){onTransitionEnd==null?void 0:onTransitionEnd({route:scene.route},true);onCloseRoute({route:scene.route});};var handleTransitionStart=function handleTransitionStart(_ref2){var closing=_ref2.closing;if(active&&closing){onPageChangeConfirm==null?void 0:onPageChangeConfirm();}else{onPageChangeCancel==null?void 0:onPageChangeCancel();}onTransitionStart==null?void 0:onTransitionStart({route:scene.route},closing);};var insets={top:safeAreaInsetTop,right:safeAreaInsetRight,bottom:safeAreaInsetBottom,left:safeAreaInsetLeft};var _useTheme=(0,_useTheme2.default)(),colors=_useTheme.colors;var _React$useState=React.useState('box-none'),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),pointerEvents=_React$useState2[0],setPointerEvents=_React$useState2[1];React.useEffect(function(){var _scene$progress$next;var listener=(_scene$progress$next=scene.progress.next)==null?void 0:_scene$progress$next.addListener==null?void 0:_scene$progress$next.addListener(function(_ref3){var value=_ref3.value;setPointerEvents(value<=EPSILON?'box-none':'none');});return function(){if(listener){var _scene$progress$next2;(_scene$progress$next2=scene.progress.next)==null?void 0:_scene$progress$next2.removeListener==null?void 0:_scene$progress$next2.removeListener(listener);}};},[pointerEvents,scene.progress.next]);return React.createElement(_Card.default,{index:index,gestureDirection:gestureDirection,layout:layout,insets:insets,gesture:gesture,current:scene.progress.current,next:scene.progress.next,closing:closing,onOpen:handleOpen,onClose:handleClose,overlayEnabled:cardOverlayEnabled,shadowEnabled:cardShadowEnabled,onTransitionStart:handleTransitionStart,onGestureBegin:onPageChangeStart,onGestureCanceled:onPageChangeCancel,gestureEnabled:gestureEnabled,gestureResponseDistance:gestureResponseDistance,gestureVelocityImpact:gestureVelocityImpact,transitionSpec:transitionSpec,styleInterpolator:cardStyleInterpolator,accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',pointerEvents:active?'box-none':pointerEvents,containerStyle:headerMode==='float'&&!headerTransparent&&headerShown!==false?{marginTop:headerHeight}:null,contentStyle:[{backgroundColor:colors.background},cardStyle],style:_reactNative.StyleSheet.absoluteFill,__source:{fileName:_jsxFileName,lineNumber:160}},React.createElement(_reactNative.View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:192}},React.createElement(_reactNative.View,{style:styles.scene,__source:{fileName:_jsxFileName,lineNumber:193}},React.createElement(_HeaderHeightContext.default.Provider,{value:headerHeight,__source:{fileName:_jsxFileName,lineNumber:194}},renderScene({route:scene.route}))),headerMode==='screen'?renderHeader({mode:'screen',layout:layout,insets:insets,scenes:[previousScene,scene],getPreviousRoute:getPreviousRoute,getFocusedRoute:getFocusedRoute,gestureDirection:gestureDirection,styleInterpolator:headerStyleInterpolator,onContentHeightChange:onHeaderHeightChange}):null));}var _default=React.memo(CardContainer);exports.default=_default;var styles=_reactNative.StyleSheet.create({container:{flex:1,flexDirection:'column-reverse'},scene:{flex:1}});
//# sourceMappingURL=CardContainer.js.map