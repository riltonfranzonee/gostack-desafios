{"version":3,"sources":["Card.tsx"],"names":["GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","Card","isClosing","Animated","Value","inverted","props","gestureDirection","layout","width","height","isSwiping","animate","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransitionStart","toValue","getAnimateToValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","config","isInteraction","start","finished","handleEndInteraction","enabled","pointerEvents","contentRef","current","setNativeProps","interactionHandle","undefined","InteractionManager","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","GestureState","BEGAN","setValue","CANCELLED","END","distance","translation","translationY","velocityY","translationX","velocityX","Math","abs","setTimeout","getInterpolatedStyle","styleInterpolator","index","next","insetTop","insetRight","insetBottom","insetLeft","progress","swiping","layouts","screen","insets","top","right","bottom","left","getCardAnimationContext","gestureRef","React","createRef","prevProps","gestureResponseDistance","vertical","horizontal","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","overlayEnabled","shadowEnabled","gestureEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","interpolatedStyle","animationContext","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","StyleSheet","flatten","backgroundColor","isTransparent","alpha","styles","overlay","container","gestureActivationCriteria","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","content","Component","defaultProps","create","flex","overflow","absoluteFillObject","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  State as GestureState,\n  PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\nimport StackGestureRefContext from '../../utils/GestureHandlerRefContext';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    if (\n      this.getAnimateToValue(this.props) !== this.getAnimateToValue(prevProps)\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.handleEndInteraction();\n  }\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: any;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransitionStart?.({ closing });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED:\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n        onGestureCanceled?.();\n        break;\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          Math.abs(translation + velocity * gestureVelocityImpact) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : false;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = (setTimeout(\n            onClose,\n            32\n          ) as any) as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private gestureRef = React.createRef<PanGestureHandler>();\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = backgroundColor\n      ? Color(backgroundColor).alpha() === 0\n      : false;\n\n    return (\n      <View pointerEvents=\"box-none\" {...rest}>\n        {overlayEnabled && overlayStyle ? (\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[styles.overlay, overlayStyle]}\n          />\n        ) : null}\n        <Animated.View\n          style={[styles.container, containerStyle, customContainerStyle]}\n          pointerEvents=\"box-none\"\n        >\n          <PanGestureHandler\n            ref={this.gestureRef}\n            enabled={layout.width !== 0 && gestureEnabled}\n            onGestureEvent={handleGestureEvent}\n            onHandlerStateChange={this.handleGestureStateChange}\n            {...this.gestureActivationCriteria()}\n          >\n            <Animated.View style={[styles.container, cardStyle]}>\n              {shadowEnabled && shadowStyle && !isTransparent ? (\n                <Animated.View\n                  style={[\n                    styles.shadow,\n                    gestureDirection === 'horizontal'\n                      ? [styles.shadowHorizontal, styles.shadowLeft]\n                      : gestureDirection === 'horizontal-inverted'\n                      ? [styles.shadowHorizontal, styles.shadowRight]\n                      : gestureDirection === 'vertical'\n                      ? [styles.shadowVertical, styles.shadowTop]\n                      : [styles.shadowVertical, styles.shadowBottom],\n                    shadowStyle,\n                  ]}\n                  pointerEvents=\"none\"\n                />\n              ) : null}\n              <View\n                ref={this.contentRef}\n                style={[styles.content, contentStyle] as any}\n              >\n                <StackGestureRefContext.Provider value={this.gestureRef}>\n                  <CardAnimationContext.Provider value={animationContext}>\n                    {children}\n                  </CardAnimationContext.Provider>\n                </StackGestureRefContext.Provider>\n              </View>\n            </Animated.View>\n          </PanGestureHandler>\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    backgroundColor: '#fff',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]}