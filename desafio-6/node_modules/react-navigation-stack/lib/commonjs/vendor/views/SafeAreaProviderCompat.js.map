{"version":3,"sources":["SafeAreaProviderCompat.tsx"],"names":["initialSafeAreaInsets","top","bottom","right","left","SafeAreaProviderCompat","children","insets"],"mappings":"qLAAA,oDACA,0EAIA,sE,uHAKA,GAAMA,CAAAA,qBAAqB,CAAG,CAC5BC,GAAG,CAAE,iDAAmB,IAAnB,CADuB,CAE5BC,MAAM,CAAE,8CAFoB,CAG5BC,KAAK,CAAE,CAHqB,CAI5BC,IAAI,CAAE,CAJsB,CAA9B,CAWe,QAASC,CAAAA,sBAAT,MAAqD,IAAnBC,CAAAA,QAAmB,MAAnBA,QAAmB,CAClE,MACE,qBAAC,4CAAD,kDACG,SAAAC,MAAM,CAAI,CACT,GAAIA,MAAJ,CAAY,CAIV,MAAOD,CAAAA,QAAP,CACD,CAED,MACE,qBAAC,4CAAD,EAAkB,qBAAqB,CAAEN,qBAAzC,iDACGM,QADH,CADF,CAKD,CAdH,CADF,CAkBD","sourcesContent":["import * as React from 'react';\nimport {\n  SafeAreaProvider,\n  SafeAreaConsumer,\n} from 'react-native-safe-area-context';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\n\nconst initialSafeAreaInsets = {\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0,\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function SafeAreaProviderCompat({ children }: Props) {\n  return (\n    <SafeAreaConsumer>\n      {insets => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/navigation-ex/issues/174\n          return children;\n        }\n\n        return (\n          <SafeAreaProvider initialSafeAreaInsets={initialSafeAreaInsets}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaConsumer>\n  );\n}\n"]}