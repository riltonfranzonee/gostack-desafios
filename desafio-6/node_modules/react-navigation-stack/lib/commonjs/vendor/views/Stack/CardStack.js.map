{"version":3,"sources":["CardStack.tsx"],"names":["maybeExpoVersion","global","Expo","Constants","manifest","sdkVersion","split","isInsufficientExpoVersion","Number","EPSILON","FAR_FAR_AWAY","dimensions","Dimensions","get","layout","width","height","MaybeScreenContainer","enabled","style","rest","Platform","OS","overflow","MaybeScreen","active","top","transform","translateY","interpolate","inputRange","outputRange","FALLBACK_DESCRIPTOR","Object","freeze","options","getHeaderHeights","routes","insets","descriptors","previous","reduce","acc","curr","key","StyleSheet","flatten","headerStyle","safeAreaInsets","headerStatusBarHeight","getDistanceFromOptions","mode","descriptor","gestureDirection","ModalTransition","DefaultTransition","getProgressFromGesture","gesture","distance","CardStack","state","scenes","gestures","props","headerHeights","handleLayout","e","nativeEvent","setState","handleHeaderLayout","route","previousHeight","getFocusedRoute","index","closingRouteKeys","onOpenRoute","onCloseRoute","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","forNoAnimationHeader","right","bottom","left","isScreensEnabled","styles","container","map","self","focused","scene","isScreenActive","length","progress","next","extrapolate","headerShown","headerTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","animationEnabled","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","forNoAnimationCard","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","previousRoute","previousScene","j","s","absoluteFill","includes","onContentHeightChange","undefined","styleInterpolator","floating","Animated","Value","openingRouteKeys","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","current","__memo","every","it","i","React","Component","create","flex","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Route,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\n// @ts-ignore\nconst maybeExpoVersion = global.Expo?.Constants.manifest.sdkVersion.split(\n  '.'\n)[0];\nconst isInsufficientExpoVersion = maybeExpoVersion\n  ? Number(maybeExpoVersion) <= 36\n  : maybeExpoVersion === 'UNVERSIONED';\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 0.01;\nconst FAR_FAR_AWAY = 9000;\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nconst MaybeScreenContainer = ({\n  enabled,\n  style,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && screensEnabled()) {\n    return <ScreenContainer style={style} {...rest} />;\n  }\n\n  return (\n    <View\n      collapsable={!enabled}\n      removeClippedSubviews={Platform.OS !== 'ios' && enabled}\n      style={[style, { overflow: 'hidden' }] as any}\n      {...rest}\n    />\n  );\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  style,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && screensEnabled()) {\n    // @ts-ignore\n    return <Screen active={active} style={style} {...rest} />;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        style,\n        {\n          overflow: 'hidden',\n          // Position the screen offscreen to take advantage of offscreen perf optimization\n          // https://facebook.github.io/react-native/docs/view#removeclippedsubviews\n          // This can be useful if screens is not enabled\n          // It's buggy on iOS, so we don't enable it there\n          top:\n            enabled && typeof active === 'number' && !active ? FAR_FAR_AWAY : 0,\n          transform: [\n            {\n              // If the `active` prop is animated node, we can't use the `left` property due to native driver\n              // So we use `translateY` instead\n              translateY:\n                enabled && typeof active !== 'number'\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [FAR_FAR_AWAY, 0],\n                    })\n                  : 0,\n            },\n          ],\n        },\n      ]}\n      {...rest}\n    />\n  );\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(mode, layout, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    gestures: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    headerHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          {}\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    // Screens is buggy on iOS, so we don't enable it there\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n    const isScreensEnabled =\n      Platform.OS !== 'ios' &&\n      (isInsufficientExpoVersion ? mode !== 'modal' : true);\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={isScreensEnabled}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // Display current screen and a screen beneath.\n            let isScreenActive: Animated.AnimatedInterpolation | 0 | 1 =\n              index >= self.length - 2 ? 1 : 0;\n\n            if (isInsufficientExpoVersion) {\n              isScreenActive =\n                index === self.length - 1\n                  ? 1\n                  : Platform.OS === 'android'\n                  ? scene.progress.next\n                    ? scene.progress.next.interpolate({\n                        inputRange: [0, 1 - EPSILON, 1],\n                        outputRange: [1, 1, 0],\n                        extrapolate: 'clamp',\n                      })\n                    : 1\n                  : index === self.length - 2\n                  ? 1\n                  : 0;\n            }\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  gestureDirection = defaultTransitionPreset.gestureDirection,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  gestureDirection,\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            const previousRoute = getPreviousRoute({ route: scene.route });\n\n            let previousScene = scenes[index - 1];\n\n            if (previousRoute) {\n              // The previous scene will be shortly before the current scene in the array\n              // So loop back from current index to avoid looping over the full array\n              for (let j = index - 1; j >= 0; j--) {\n                const s = scenes[j];\n\n                if (s && s.route.key === previousRoute.key) {\n                  previousScene = s;\n                  break;\n                }\n              }\n            }\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={isScreensEnabled}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={previousScene}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  headerHeight={headerHeights[route.key]}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousRoute={getPreviousRoute}\n                  getFocusedRoute={this.getFocusedRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              getPreviousRoute,\n              getFocusedRoute: this.getFocusedRoute,\n              onContentHeightChange: this.handleHeaderLayout,\n              gestureDirection:\n                focusedOptions.gestureDirection !== undefined\n                  ? focusedOptions.gestureDirection\n                  : defaultTransitionPreset.gestureDirection,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}